- instalamos ExpressJs con npm install express --save.

-npm run start:dev 

-instalar nodemon, para que al detectar cambios se reinicie el servidor
 y no tengamos nosotros que bajar el servidor y volverlo a subir.

- para ejecutar los scripts usar npm run y el nombre del script situado en 
  el package.json. Instalo la extensi√≥n npm-scripts

- para conectar node a mongo instalamos mongoose en la terminal con 
  npm i mongoose

- hacemos npm i dotenv  para leer archivos .env

- instalamos npm i cors  para establecer desde que dominio
  vamos a permitir las peticiones a nuestro backend

- instalamos npm i express-validator para validar nuestras rutas

- para encriptar la password instalar npm i bcryptjs

- para generar jwt instalamos npm i jsonwebtoken

- archivo env con
  PORT=3000
  DB_CNN=mongodb+srv://usuario:password@cluster0.rxjpgcr.mongodb.net/hospitaldb
  JWT_SECRET= Holafduh849984wuyf94wh@90fwhf9w47gh
  GOOGLE_ID=654622771453-jf22r6uopircg7fe0221dsd6kbjn5k60.apps.googleusercontent.com
  GOOGLE_SECRET=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

- para subir imagenes instalar npm i express-fileupload

- instalamos npm i uuid para agregar un identificador unico a las imagenes

- instalar npm install google-auth-library --save para google sign in

- pagina documentacion google https://developers.google.com/identity/gsi/web/guides/verify-google-id-token?hl=es-419